{"version":3,"sources":["views/theme.tsx","api/api.ts","components/AreaIndex.tsx","components/StandardIndex.tsx","views/AirQualityIndex.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","common","green","yellow","orange","red","purple","brown","lightGreen","lightYellow","lightOrange","lightRed","lightPurple","lightBrown","custom","btn","position","left","top","width","height","borderRadius","border","fontWeight","fontSize","typography","govOpenDataRequest","axios","create","baseURL","apiAQI","data","get","useStyles","makeStyles","card","site","padding","mainIndex","background","borderLeft","color","white","topBorder","borderTop","table","setColor","bgColor","AreaIndex","props","classes","useState","expanded","setExpanded","console","log","Card","variant","className","onClick","Grid","container","item","xs","Typography","align","style","aqi","aqiIndex","Number","setStyle","AQI","Collapse","in","timeout","CardContent","TableContainer","Table","aria-label","TableBody","TableRow","TableCell","selfIndex","breakpoints","up","down","borderColor","StandardIndex","Box","alignSelf","p","status","range","main","spacing","board","maxWidth","standardIndex","marginBottom","flexDirection","formControl","minWidth","standardIndexData","AirQualityIndex","county","setCounty","records","setRecords","useEffect","a","then","res","catch","err","fetchData","justify","alignItems","component","Paper","elevation","square","sm","mb","FormControl","Select","id","value","onChange","e","target","inputProps","displayEmpty","MenuItem","disabled","set","Set","filter","has","County","add","map","index","key","countyFilter","countyDetail","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.68c70d5a.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\ndeclare module '@material-ui/core/styles/createPalette' {\r\n  interface CommonColors {\r\n    green: string;\r\n    yellow: string;\r\n    orange: string;\r\n    red: string;\r\n    purple: string;\r\n    brown: string;\r\n    lightGreen: string;\r\n    lightYellow: string;\r\n    lightOrange: string;\r\n    lightRed: string;\r\n    lightPurple: string;\r\n    lightBrown: string;\r\n  }\r\n}\r\n\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n  interface Theme {\r\n    custom: {\r\n      btn: any\r\n    }\r\n  }\r\n  \r\n  interface ThemeOptions {\r\n    custom?: {\r\n      btn?: any\r\n    }\r\n  }\r\n}\r\n\r\nconst customGreen = '#009865'\r\nconst customYellow = '#fffb26'\r\nconst customOrange = '#ff9835'\r\nconst customRed = '#ca0034'\r\nconst customPurple = '#670099'\r\nconst customBrown = '#7e0123'\r\nconst customLightGreen = '#e5f4ef'\r\nconst customLightYellow = '#ffffea'\r\nconst customLightOrange = '#fef4ea'\r\nconst customLightRed = '#fae5ea'\r\nconst customLightPurple = '#f0e5f5'\r\nconst customLightBrown = '#f1e5e9'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      green: customGreen,\r\n      yellow: customYellow,\r\n      orange: customOrange,\r\n      red: customRed,\r\n      purple: customPurple,\r\n      brown: customBrown,\r\n      lightGreen: customLightGreen,\r\n      lightYellow: customLightYellow,\r\n      lightOrange: customLightOrange,\r\n      lightRed: customLightRed,\r\n      lightPurple: customLightPurple,\r\n      lightBrown: customLightBrown\r\n    }\r\n  },\r\n  custom: {\r\n    btn: {\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '999px',\r\n      border: 0,\r\n      fontWeight: 'bold',\r\n      fontSize: '2rem',\r\n    }\r\n  },\r\n  typography: {\r\n    \"fontFamily\": `\"Noto Sans TC\", sans-serif`,\r\n    \"fontSize\": 14,\r\n    \"fontWeightLight\": 300,\r\n    \"fontWeightRegular\": 400,\r\n    \"fontWeightMedium\": 500\r\n   }\r\n})\r\n\r\nexport default theme","import axios from 'axios'\r\n\r\nconst govOpenDataRequest = axios.create({\r\n  baseURL: 'https://data.epa.gov.tw'\r\n})\r\n\r\nexport const apiAQI = (data = {}) => govOpenDataRequest.get('/api/v1/aqx_p_432?limit=1000&api_key=9be7b239-557b-4c10-9775-78cadfc555e9&format=json', data)","import React, { useState } from 'react'\r\nimport { Card, CardContent, Collapse, Typography, Grid, TableContainer, Table, TableBody, TableRow, TableCell } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport theme from '../views/theme'\r\n\r\nimport { IRecords } from '../interface/AirQualityIndex'\r\n\r\ninterface IProps{\r\n  data: IRecords\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    borderRadius: 0,\r\n    border: '1px solid #555',\r\n  },\r\n  site: {\r\n    padding: '16px',\r\n  },\r\n  mainIndex: {\r\n    background: 'var(--bgColor)',\r\n    borderLeft: '1px solid #555',\r\n    color: theme.palette.common.white\r\n  },\r\n  topBorder: {\r\n    borderTop: '1px solid #555',\r\n  },\r\n  table: {\r\n    width: '100%'\r\n  }\r\n}))\r\n\r\nconst setColor = (bgColor: string) => {\r\n  return {\r\n    '--bgColor': bgColor\r\n  } as React.CSSProperties\r\n}\r\n\r\n\r\nconst AreaIndex = (props: IProps) => {\r\n  const classes = useStyles()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const {data} = props\r\n  console.log('area index:', data)\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded)\r\n  }\r\n\r\n  const setStyle = (aqi: any) => {\r\n    console.log(aqi)\r\n    const aqiIndex = Number(aqi)\r\n    if(aqiIndex < 50){\r\n      return setColor(theme.palette.common.green)\r\n    }\r\n    else if(aqiIndex > 50 && aqiIndex < 101){\r\n      return setColor(theme.palette.common.yellow)\r\n    }\r\n    else if(aqiIndex > 100 && aqiIndex < 151){\r\n      return setColor(theme.palette.common.orange)\r\n    }\r\n    else if(aqiIndex > 150 && aqiIndex < 201){\r\n      return setColor(theme.palette.common.red)\r\n    }\r\n    else if(aqiIndex > 200 && aqiIndex < 301){\r\n      return setColor(theme.palette.common.purple)\r\n    }\r\n    else if(aqiIndex > 300){\r\n      return setColor(theme.palette.common.brown)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card variant='outlined' className={classes.card} onClick={() => handleExpandClick()}>\r\n      <Grid container>\r\n        <Grid item xs={6} className={classes.site}>\r\n          <Typography variant='h5' align='center'>{data[\"SiteName\"]}</Typography>\r\n        </Grid>\r\n        <Grid item xs={6} className={`${classes.site} ${classes.mainIndex}`} style={setStyle(data.AQI)}>\r\n          <Typography variant='h5' align='center'>{data[\"AQI\"]}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n     \r\n      <Collapse in={expanded} timeout='auto'>\r\n        <CardContent className={classes.topBorder}>\r\n          <TableContainer>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">PM<sub>2.5</sub></TableCell>\r\n                  <TableCell align=\"left\">{data[\"PM2.5\"]}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">PM<sub>10</sub></TableCell>\r\n                  <TableCell align=\"left\">{data[\"PM10\"]}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">O<sub>3</sub></TableCell>\r\n                  <TableCell align=\"left\">{data[\"O3\"]}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">CO</TableCell>\r\n                  <TableCell align=\"left\">{data[\"CO\"]}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">SO<sub>2</sub></TableCell>\r\n                  <TableCell align=\"left\">{data[\"SO2\"]}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">NO<sub>2</sub></TableCell>\r\n                  <TableCell align=\"left\">{data[\"NO2\"]}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n         \r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AreaIndex","import React from 'react'\r\nimport { Grid, Typography, Box } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport theme from '../views/theme'\r\n\r\ninterface IProps{\r\n  data: {\r\n    status: string\r\n    range: string\r\n    color: string\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  selfIndex: {\r\n    background: 'var(--bgColor)',\r\n    [theme.breakpoints.up('sm')]: {\r\n      borderTop: `4px solid var(--borderColor)`,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      borderLeft: `4px solid var(--borderColor)`,\r\n    },\r\n  }\r\n}))\r\n\r\nconst setColor = (bgColor: string, borderColor: string) => {\r\n  return {\r\n    '--bgColor': bgColor,\r\n    '--borderColor': borderColor\r\n  } as React.CSSProperties\r\n}\r\n\r\nconst StandardIndex = (props: IProps) => {\r\n  const classes = useStyles()\r\n\r\n  const setStyle = (color: string) => {\r\n    switch(color){\r\n      case 'green':\r\n        return setColor(theme.palette.common.lightGreen, theme.palette.common.green)\r\n      case 'yellow':\r\n        return setColor(theme.palette.common.lightYellow, theme.palette.common.yellow)\r\n      case 'orange':\r\n        return setColor(theme.palette.common.lightOrange, theme.palette.common.orange)\r\n      case 'red':\r\n        return setColor(theme.palette.common.lightRed, theme.palette.common.red)\r\n      case 'purple':\r\n        return setColor(theme.palette.common.lightPurple, theme.palette.common.purple)\r\n      case 'brown':\r\n        return setColor(theme.palette.common.lightBrown, theme.palette.common.brown)\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Grid container item xs={2} className={classes.selfIndex} style={setStyle(props.data.color)}>\r\n      <Box alignSelf='center' p={1}>\r\n        <Typography variant='body2'>\r\n          {props.data.status}\r\n          <br/>\r\n          {props.data.range}\r\n        </Typography>\r\n      </Box>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default StandardIndex","import React, { useEffect, useState } from 'react'\r\nimport { Paper, Grid, Typography, Box, FormControl, Select, MenuItem } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { apiAQI } from '../api/api'\r\nimport AreaIndex from '../components/AreaIndex'\r\nimport StandardIndex from '../components/StandardIndex'\r\n\r\nimport { IRecords } from '../interface/AirQualityIndex'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  main:{\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    background: '#eee',\r\n    padding: theme.spacing(2),\r\n  },\r\n  board: {\r\n    background: theme.palette.common.white,\r\n    maxWidth: '800px',\r\n    padding: theme.spacing(2),\r\n  },\r\n  standardIndex: {\r\n    marginBottom: theme.spacing(4),\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n    },\r\n    '& > div': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        maxWidth: () => '100%',\r\n      },\r\n    }\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n}))\r\n\r\nconst standardIndexData = [\r\n  {status: '良好', range: '0~50', color: 'green'},\r\n  {status: '普通', range: '51~100', color: 'yellow'},\r\n  {status: '對敏感族群不健康', range: '101~150', color: 'orange'},\r\n  {status: '對所有族群不健康', range: '151~200', color: 'red'},\r\n  {status: '非常不健康', range: '201~300', color: 'purple'},\r\n  {status: '危害', range: '301~500', color: 'brown'}\r\n]\r\n\r\nconst AirQualityIndex = () => {\r\n  const classes = useStyles()\r\n  const [county, setCounty] = useState('')\r\n  const [records, setRecords] = useState([])\r\n\r\n  const handleChange = (e: React.ChangeEvent<{value: unknown}>) => {\r\n    console.log(e.target.value)\r\n    setCounty(e.target.value as string)\r\n  }\r\n\r\n  const countyFilter = () => {\r\n    // console.log('records:', records)\r\n    const set = new Set();\r\n    if(records){\r\n      const counties = records.filter((item: IRecords) => !set.has(item.County) ? set.add(item.County) : false)\r\n\r\n      return counties.map((item: IRecords, index) => (\r\n        <MenuItem value={item.County} key={index}>{item.County}</MenuItem>\r\n      ))\r\n    }\r\n  }\r\n\r\n  const countyDetail = () => {\r\n    const set = new Set();\r\n    if(records){\r\n      const counties = records.filter((item:IRecords) => item.County === county ? set.add(item) : false)\r\n\r\n      return counties.map((item:IRecords, index) => (\r\n        <Grid item xs={6} key={index}>\r\n          <AreaIndex data={item} />\r\n        </Grid>\r\n      ))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await apiAQI()\r\n      .then(res => {\r\n        console.log(res.data.records)\r\n        setRecords(res.data.records);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  return(\r\n    <Grid container justify='center' alignItems='flex-start' className={classes.main}>\r\n      <Grid container item xs={12} className={classes.board} component={Paper} elevation={3} square>\r\n        \r\n        <Grid item xs={12} sm={6}>\r\n          <Box mb={4}>\r\n            <Typography variant='h5'>空氣品質指標AQI</Typography>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box mb={4}>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                id=\"demo-simple-select\"\r\n                value={county}\r\n                onChange={handleChange}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n                displayEmpty\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  <em>請選擇縣市</em>\r\n                </MenuItem>\r\n                {countyFilter()}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid container className={classes.standardIndex}>\r\n          {standardIndexData.map((data, index) => (\r\n            <StandardIndex data={data} key={index}/>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Grid container spacing={1}>\r\n          {county ? countyDetail() : null}\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default AirQualityIndex","import React from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './views/theme'\nimport AirQualityIndex from './views/AirQualityIndex'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <AirQualityIndex/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n   <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}